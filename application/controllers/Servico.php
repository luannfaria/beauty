<?php
/*
 * Generated by CRUDigniter v3.2
 * www.crudigniter.com
 */

class Servico extends CI_Controller{
    function __construct()
    {
        parent::__construct();

        if( (!session_id()) || (!$this->session->userdata('logado'))){
            redirect('dashboard/index');
}
        $this->load->model('Servico_model');
    }

    /*
     * Listing of servicos
     */
    function index()
    {

        $data['servicos'] = $this->Servico_model->get_all_servicos();
        $this->load->model('Categoria_prod_serv_model');
        $data['all_categoria_prod_servs'] = $this->Categoria_prod_serv_model->get_all_categoria_prod_servs();

      //  $data['_view'] = 'servico/index';
    //    $this->load->view('layouts/main',$data);

      $this->load->view('include/header');
      $this->load->view('servico/index',$data);
      $this->load->view('include/footer');
    }

    /*
     * Adding a new servico
     */
    function add()
    {
        $this->load->library('form_validation');

		$this->form_validation->set_rules('nomeservico','Nome do serviço','required');
		$this->form_validation->set_rules('valorserv','Valor de venda','required');
		$this->form_validation->set_rules('idcategoria','categoria','required');

		if($this->form_validation->run())
        {
            $params = array(
				'idcategoria' => $this->input->post('idcategoria'),
				'nomeservico' => $this->input->post('nomeservico'),
				'valorserv' => $this->input->post('valorserv'),
				'status' => $this->input->post('status'),
				'comissao' => $this->input->post('comissao'),
				'tiposervico' => $this->input->post('tiposervico'),
            );

            $servico_id = $this->Servico_model->add_servico($params);
            redirect('servico/index');
        }
        else
        {
			$this->load->model('Categoria_prod_serv_model');
			$data['all_categoria_prod_servs'] = $this->Categoria_prod_serv_model->get_all_categoria_prod_servs();

        //    $data['_view'] = 'servico/add';
        //    $this->load->view('layouts/main',$data);

        $this->load->view('include/header');
        $this->load->view('servico/add',$data);
        $this->load->view('include/footer');
        }
    }

    function editpacote($idservico){

        $data['servico'] = $this->Servico_model->get_servico($idservico);
        $data['itenspacote'] =$this->Servico_model->get_itens($idservico);
        $data['pacote']=$this->Servico_model->get_idpacote($idservico);
        $this->load->model('Categoria_prod_serv_model');
				$data['all_categoria_prod_servs'] = $this->Categoria_prod_serv_model->get_all_categoria_prod_servs();


        $this->load->view('include/header');
        $this->load->view('servico/editpacote',$data);
        $this->load->view('include/footer');





    }

    function addpacote(){

      $params = array(
  'nomeservico' => $this->input->post('pacotenome'),
  'valorserv' => $this->input->post('valorpacote'),
  'tiposervico' => $this->input->post('tiposerv'),
  'status' => $this->input->post('statuspacote')


  		);

  		  $pacote = $this->Servico_model->addpacote($params);

        $count = count($this->input->post('comissao'));
        for($i=0; $i< $count;$i++){
          $nome1 = $this->input->post('pacotenome');
          $nome2 = $this->input->post('item')[$i];
          $nome3 = $nome1 . " item: " . $nome2;
        	$itens = array(

        			'idpacote' => $pacote,
        			'nomeserv' =>  $nome3,
              'idserv' =>$this->input->post('idservico')[$i],
              'comissao' => $this->input->post('comissao')[$i]



        	);

        		$itens = $this->Servico_model->itempacote($itens);


        }


         redirect(base_url('servico'));


    }
    function additempacote(){

      $itens = array(
            'idpacote' => $this->input->post('idpacote'),
            'nomeserv' => $this->input->post('nomeitem'),
            'idserv' =>$this->input->post('idservico'),
            'comissao'=>$this->input->post('comi'),
          );

          if($this->Servico_model->item($itens)== true){

            echo json_encode(array('result'=> true));

          }
          else{
                echo json_encode(array('result'=> false));
            }


    }

    /*
     * Editing a servico
     */
    function edit($idservico)
    {
        // check if the servico exists before trying to edit it
        $data['servico'] = $this->Servico_model->get_servico($idservico);

        if(isset($data['servico']['idservico']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('nomeservico','Nome do serviço','required');
			$this->form_validation->set_rules('valorserv','Valor ','required');
			$this->form_validation->set_rules('idcategoria','Categoria','required');

			if($this->form_validation->run())
            {
                $params = array(
					'idcategoria' => $this->input->post('idcategoria'),
					'nomeservico' => $this->input->post('nomeservico'),
					'valorserv' => $this->input->post('valorserv'),
					'status' => $this->input->post('status'),
					'comissao' => $this->input->post('comissao'),
					'tiposervico' => $this->input->post('tiposervico'),
                );

                $this->Servico_model->update_servico($idservico,$params);
                redirect('servico/index');
            }
            else
            {
				$this->load->model('Categoria_prod_serv_model');
				$data['all_categoria_prod_servs'] = $this->Categoria_prod_serv_model->get_all_categoria_prod_servs();

            //    $data['_view'] = 'servico/edit';
              //  $this->load->view('layouts/main',$data);

              $this->load->view('include/header');
              $this->load->view('servico/edit',$data);
              $this->load->view('include/footer');
            }
        }
        else
            show_error('The servico you are trying to edit does not exist.');
    }

    /*
     * Deleting servico
     */
    function remove($idservico)
    {
        $servico = $this->Servico_model->get_servico($idservico);

        // check if the servico exists before trying to delete it
        if(isset($servico['idservico']))
        {
            $this->Servico_model->delete_servico($idservico);
            redirect('servico/index');
        }
        else
            show_error('The servico you are trying to delete does not exist.');
    }

    function removeitem(){

        $iditem_serv = $this->input->post('iditem');





          if($this->Servico_model->delete_item($iditem_serv)== true){

            echo json_encode(array('result'=> true));

          }
          else{
                echo json_encode(array('result'=> false));
            }






    }

}
