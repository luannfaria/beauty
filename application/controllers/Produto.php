<?php
/*
 * Generated by CRUDigniter v3.2
 * www.crudigniter.com
 */

class Produto extends CI_Controller{
    function __construct()
    {
        parent::__construct();

        if( (!session_id()) || (!$this->session->userdata('logado'))){
            redirect('dashboard/index');
}
        $this->load->model('Produto_model');
    }

    /*
     * Listing of produtos
     */
    function index()
    {
        $data['produtos'] = $this->Produto_model->get_all_produtos();

        $data['_view'] = 'produto/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new produto
     */
    function add()
    {
        $this->load->library('form_validation');

		$this->form_validation->set_rules('nome','Nome','required');
		$this->form_validation->set_rules('precovenda','Precovenda','required');

		if($this->form_validation->run())
        {
            $params = array(
				'status' => $this->input->post('status'),
				'idcategoria' => $this->input->post('idcategoria'),
				'nome' => $this->input->post('nome'),
				'custoproduto' => $this->input->post('custoproduto'),
				'precovenda' => $this->input->post('precovenda'),
				'codbarra' => $this->input->post('codbarra'),
				'marca' => $this->input->post('marca'),
            );

            $produto_id = $this->Produto_model->add_produto($params);
            redirect('produto/index');
        }
        else
        {
			$this->load->model('Categoria_prod_serv_model');
			$data['all_categoria_prod_servs'] = $this->Categoria_prod_serv_model->get_all_categoria_prod_servs();

            $data['_view'] = 'produto/add';
            $this->load->view('layouts/main',$data);
        }
    }

    /*
     * Editing a produto
     */
    function edit($idproduto)
    {
        // check if the produto exists before trying to edit it
        $data['produto'] = $this->Produto_model->get_produto($idproduto);

        if(isset($data['produto']['idproduto']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('nome','Nome','required');
			$this->form_validation->set_rules('precovenda','Precovenda','required');

			if($this->form_validation->run())
            {
                $params = array(
					'status' => $this->input->post('status'),
					'idcategoria' => $this->input->post('idcategoria'),
					'nome' => $this->input->post('nome'),
					'custoproduto' => $this->input->post('custoproduto'),
					'precovenda' => $this->input->post('precovenda'),
					'codbarra' => $this->input->post('codbarra'),
					'marca' => $this->input->post('marca'),
                );

                $this->Produto_model->update_produto($idproduto,$params);
                redirect('produto/index');
            }
            else
            {
				$this->load->model('Categoria_prod_serv_model');
				$data['all_categoria_prod_servs'] = $this->Categoria_prod_serv_model->get_all_categoria_prod_servs();

                $data['_view'] = 'produto/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The produto you are trying to edit does not exist.');
    }

    /*
     * Deleting produto
     */
    function remove($idproduto)
    {
        $produto = $this->Produto_model->get_produto($idproduto);

        // check if the produto exists before trying to delete it
        if(isset($produto['idproduto']))
        {
            $this->Produto_model->delete_produto($idproduto);
            redirect('produto/index');
        }
        else
            show_error('The produto you are trying to delete does not exist.');
    }

}
